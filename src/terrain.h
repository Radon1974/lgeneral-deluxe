/***************************************************************************
                          terrain.h  -  description
                             -------------------
    begin                : Wed Mar 17 2002
    copyright            : (C) 2001 by Michael Speck
    email                : kulkanie@gmx.net
 ***************************************************************************/
/***************************************************************************
                     Modifications by LGD team 2012+.
 ***************************************************************************/
/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/

#ifndef __TERRAIN_H
#define __TERRAIN_H

#include <SDL.h>
#include "image.h"
#include "audio.h"

/*
====================================================================
Флаги погоды.
====================================================================
*/
enum {
    NO_AIR_ATTACK  = ( 1L << 1 ), /* летающие части не могут и не могут быть
                                     атаковали */
    DOUBLE_FUEL_COST = ( 1L << 2 ), /* угадай, что! */
    CUT_STRENGTH = ( 1L << 3), /* снизить силу вдвое из-за плохой погоды */
    BAD_SIGHT = ( 1L << 4 ) /* дальняя атака сложнее */
};
/*
====================================================================
Тип погоды.
====================================================================
*/
typedef struct {
    char *id;
    char *name;
    char *ground_conditions;
    int flags;
} Weather_Type;

/*
====================================================================
Туман альфа
====================================================================
*/
enum { FOG_ALPHA = 64, DANGER_ALPHA = 128 };

/*
====================================================================
Флаги местности
====================================================================
*/
enum {
    INF_CLOSE_DEF  = ( 1L << 1 ), /* если есть борьба инф против не-инф
                                     на этой местности не-inf юнит должен использовать
                                     это близкая оборонная ценность */
    NO_SPOTTING    = ( 1L << 2 ), /* вы не можете видеть на этой плитке, кроме как на ней
                                     или близко к этому */
    RIVER          = ( 1L << 3 ), /* инженеры могут построить мост через эту плитку */
    SUPPLY_AIR     = ( 1L << 4 ), /* летающие части могут поставлять */
    SUPPLY_GROUND  = ( 1L << 5 ), /* наземные подразделения могут поставлять */
    SUPPLY_SHIPS   = ( 1L << 6 ), /* плавательные юниты могут поставлять */
    SWAMP          = ( 1L << 7 ), /* штраф за атаку */
    DESERT         = ( 1L << 8 )  /* штраф за поставку */
};
/*
====================================================================
Тип местности.
В этом случае идентификатор - это единственный символ, используемый для определения
тип местности на карте.
mov, spt и флаги могут быть разными для каждого типа погоды
====================================================================
*/
typedef struct {
    char id;
    char *name;
    SDL_Surface **images;
    SDL_Surface **images_fogged;
    int *mov;
    int *spt;
    int min_entr;
    int max_entr;
    int max_ini;
    int *flags;
} Terrain_Type;

/*
====================================================================
Значки ландшафта
====================================================================
*/
typedef struct {
    SDL_Surface *fog;       /* маска используется для создания тумана */
    SDL_Surface *danger;    /* маска используется для создания опасной зоны */
    SDL_Surface *grid;      /* содержит сетку */
    SDL_Surface *select;    /* выбор кадра изображения */
    Anim *cross;            /* прицел анимация */
    Anim *expl1, *expl2;    /* анимация взрыва (атакующий, защитник)*/
#ifdef WITH_SOUND
    Wav *wav_expl;   /* взрыв */
    Wav *wav_select; /* выбор плитки */
#endif
} Terrain_Icons;

/*
====================================================================
Изображения местности
====================================================================
*/
typedef struct {
    char **ground_conditions;
    SDL_Surface **images;
    SDL_Surface **images_fogged;
} Terrain_Images;

/*
====================================================================
Загрузите типы местности, информацию о погоде и значки шестигранных плиток.
====================================================================
*/
int terrain_load( char *fname );

/*
====================================================================
Удалить типы местности и другие
====================================================================
*/
void terrain_delete( void );

/*
====================================================================
Получите стоимость движения для типа местности, передав движение
введите идентификатор и идентификатор погоды в дополнение.
Верните -1, если все очки движения израсходованы
Вернуть 0, если движение невозможно
Стоимость возврата остальное.
====================================================================
*/
int terrain_get_mov( Terrain_Type *type, int mov_type, int weather );

/*
====================================================================
Получить идентификатор (номер) погодных условий почвы
====================================================================
*/
int ground_conditions_get_index( char *ground_condition );

/*
====================================================================
Найти тип местности по id
====================================================================
*/
Terrain_Type *terrain_type_find( char terrain_type );

#endif
