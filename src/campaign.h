/***************************************************************************
                          campaign.h  -  description
                             -------------------
    begin                : Fri Apr 5 2002
    copyright            : (C) 2001 by Michael Speck
    email                : kulkanie@gmx.net
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/

#ifndef __CAMPAIGN_H
#define __CAMPAIGN_H

#define MAX_CAMPAIGN_TOKEN_LENGTH 2048

/* ascii-коды игровых символов */
enum CampaignState {
    NO_CAMPAIGN = 0,
    FIRST_SCENARIO = 1,
    CONTINUE_CAMPAIGN,
    RESTART_CAMPAIGN
};

/*
====================================================================
Запись сценария кампании.
====================================================================
*/
typedef struct {
    char *id;       /* идентификатор записи */
    char *scen;     /* имя файла сценария (если не установлено, это
                       выбор) */
    char *title;    /* строка заголовка, будет отображаться вверху */
    char *brief;    /* брифинг по этому сценарию */
    List *nexts;    /* список строк: результат> next_id> престиж
                       (если не установлен, это последнее сообщение) */
    List *descs;    /* текстовые описания для результата: результат> описание */
    List *prestige; /* престиж стоит за результат: результат> престиж */
} Camp_Entry;

/*
====================================================================
Удалить запись кампании.
====================================================================
*/
void camp_delete_entry( void *ptr );

/* проверьте, все ли следующие записи имеют соответствующую запись сценария */
void camp_verify_tree();

/*
====================================================================
Загрузить кампанию.
====================================================================
*/
int camp_load( const char *fname, const char *camp_entry );

/*
====================================================================
Загрузить описание кампании из формата lgcam.
====================================================================
*/
char* camp_load_info( char *fname, char *camp_entry );

/*
====================================================================
Загрузить описание кампании из формата lgdcam.
====================================================================
*/
char* camp_load_lgdcam_info( List *campaign_entries, const char *fname, const char *path, char *info_entry_name );

void camp_delete();

/*
====================================================================
Запросить следующую запись сценария кампании по этому результату для текущего
вход.
====================================================================
*/
Camp_Entry *camp_get_entry( const char *id );

/*
====================================================================
Вернуть список идентификаторов результатов для текущей записи кампании.
(List of char *)
====================================================================
*/
List *camp_get_result_list();

/*
====================================================================
Вернуть текстовое описание результата или 0, если описания нет.
====================================================================
*/
const char *camp_get_description(const char *result);

/*
====================================================================
Установите следующую запись сценария, выполнив поиск результатов в текущем
запись сценария. Если 'id' равен NULL, загружается 'first'
====================================================================
*/
int camp_set_next( const char *id );

/*
====================================================================
Установить текущий сценарий по идентификатору записи лагеря.
====================================================================
*/
void camp_set_cur( const char *id );

#endif
